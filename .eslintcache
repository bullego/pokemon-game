[{"/Users/svitlo/Desktop/pokemon-game/src/index.js":"1","/Users/svitlo/Desktop/pokemon-game/src/App.js":"2","/Users/svitlo/Desktop/pokemon-game/src/components/Layout/Layout.jsx":"3","/Users/svitlo/Desktop/pokemon-game/src/components/Footer/Footer.jsx":"4","/Users/svitlo/Desktop/pokemon-game/src/components/Header/index.js":"5","/Users/svitlo/Desktop/pokemon-game/src/components/Layout/index.js":"6","/Users/svitlo/Desktop/pokemon-game/src/components/Footer/index.js":"7","/Users/svitlo/Desktop/pokemon-game/src/components/PokemonCard/PokemonCard.jsx":"8","/Users/svitlo/Desktop/pokemon-game/src/components/PokemonCard/index.js":"9","/Users/svitlo/Desktop/pokemon-game/src/components/Header/Header.jsx":"10","/Users/svitlo/Desktop/pokemon-game/src/routes/GamePage/index.js":"11","/Users/svitlo/Desktop/pokemon-game/src/routes/HomePage/index.js":"12","/Users/svitlo/Desktop/pokemon-game/src/routes/GamePage/GamePage.jsx":"13","/Users/svitlo/Desktop/pokemon-game/src/routes/HomePage/HomePage.jsx":"14","/Users/svitlo/Desktop/pokemon-game/src/components/MenuHeader/index.js":"15","/Users/svitlo/Desktop/pokemon-game/src/components/MenuHeader/MenuHeader.jsx":"16","/Users/svitlo/Desktop/pokemon-game/src/components/MenuHeader/Navbar/index.js":"17","/Users/svitlo/Desktop/pokemon-game/src/components/MenuHeader/Menu/index.js":"18","/Users/svitlo/Desktop/pokemon-game/src/components/MenuHeader/Menu/Menu.jsx":"19","/Users/svitlo/Desktop/pokemon-game/src/components/MenuHeader/Navbar/Navbar.jsx":"20","/Users/svitlo/Desktop/pokemon-game/src/routes/ContactPage/index.js":"21","/Users/svitlo/Desktop/pokemon-game/src/routes/AboutPage/index.js":"22","/Users/svitlo/Desktop/pokemon-game/src/routes/ContactPage/ContactPage.jsx":"23","/Users/svitlo/Desktop/pokemon-game/src/routes/AboutPage/AboutPage.jsx":"24","/Users/svitlo/Desktop/pokemon-game/src/routes/NotFound/index.js":"25","/Users/svitlo/Desktop/pokemon-game/src/routes/NotFound/NotFoundPage.jsx":"26","/Users/svitlo/Desktop/pokemon-game/src/service/firebase.js":"27","/Users/svitlo/Desktop/pokemon-game/src/routes/GamePage/routes/BoardPage/index.js":"28","/Users/svitlo/Desktop/pokemon-game/src/routes/GamePage/routes/StartPage/index.js":"29","/Users/svitlo/Desktop/pokemon-game/src/routes/GamePage/routes/BoardPage/BoardPage.jsx":"30","/Users/svitlo/Desktop/pokemon-game/src/routes/GamePage/routes/StartPage/StartPage.jsx":"31","/Users/svitlo/Desktop/pokemon-game/src/routes/GamePage/routes/FinishPage/index.js":"32","/Users/svitlo/Desktop/pokemon-game/src/routes/GamePage/routes/FinishPage/FinishPage.jsx":"33","/Users/svitlo/Desktop/pokemon-game/src/context/pokemonContext.js":"34","/Users/svitlo/Desktop/pokemon-game/src/routes/GamePage/routes/BoardPage/component/PlayerBoard/index.js":"35","/Users/svitlo/Desktop/pokemon-game/src/routes/GamePage/routes/BoardPage/component/PlayerBoard/PlayerBoard.jsx":"36","/Users/svitlo/Desktop/pokemon-game/src/routes/GamePage/routes/BoardPage/component/Result/index.js":"37","/Users/svitlo/Desktop/pokemon-game/src/routes/GamePage/routes/BoardPage/component/Result/Result.jsx":"38","/Users/svitlo/Desktop/pokemon-game/src/routes/GamePage/routes/BoardPage/component/ArrowChoice/index.js":"39","/Users/svitlo/Desktop/pokemon-game/src/routes/GamePage/routes/BoardPage/component/ArrowChoice/ArrowChoice.jsx":"40"},{"size":305,"mtime":1613227524151,"results":"41","hashOfConfig":"42"},{"size":1404,"mtime":1613155585338,"results":"43","hashOfConfig":"42"},{"size":770,"mtime":1612186850843,"results":"44","hashOfConfig":"42"},{"size":338,"mtime":1613138465710,"results":"45","hashOfConfig":"42"},{"size":54,"mtime":1611842572965,"results":"46","hashOfConfig":"42"},{"size":54,"mtime":1611842713943,"results":"47","hashOfConfig":"42"},{"size":54,"mtime":1611842769756,"results":"48","hashOfConfig":"42"},{"size":1543,"mtime":1613114787478,"results":"49","hashOfConfig":"42"},{"size":69,"mtime":1611919231790,"results":"50","hashOfConfig":"42"},{"size":561,"mtime":1612368118213,"results":"51","hashOfConfig":"42"},{"size":60,"mtime":1612190419901,"results":"52","hashOfConfig":"42"},{"size":60,"mtime":1612190379502,"results":"53","hashOfConfig":"42"},{"size":2332,"mtime":1613398490465,"results":"54","hashOfConfig":"42"},{"size":1493,"mtime":1612386921139,"results":"55","hashOfConfig":"42"},{"size":66,"mtime":1612193539774,"results":"56","hashOfConfig":"42"},{"size":592,"mtime":1612365374242,"results":"57","hashOfConfig":"42"},{"size":54,"mtime":1612193950754,"results":"58","hashOfConfig":"42"},{"size":48,"mtime":1612194033964,"results":"59","hashOfConfig":"42"},{"size":906,"mtime":1612969659051,"results":"60","hashOfConfig":"42"},{"size":691,"mtime":1612376358871,"results":"61","hashOfConfig":"42"},{"size":69,"mtime":1612365643135,"results":"62","hashOfConfig":"42"},{"size":63,"mtime":1612365436243,"results":"63","hashOfConfig":"42"},{"size":397,"mtime":1612366290160,"results":"64","hashOfConfig":"42"},{"size":387,"mtime":1612366252792,"results":"65","hashOfConfig":"42"},{"size":72,"mtime":1612365749269,"results":"66","hashOfConfig":"42"},{"size":403,"mtime":1612367533052,"results":"67","hashOfConfig":"42"},{"size":586,"mtime":1612646194950,"results":"68","hashOfConfig":"42"},{"size":63,"mtime":1612797927291,"results":"69","hashOfConfig":"42"},{"size":63,"mtime":1612797754383,"results":"70","hashOfConfig":"42"},{"size":17196,"mtime":1613563131643,"results":"71","hashOfConfig":"42"},{"size":4908,"mtime":1613417293845,"results":"72","hashOfConfig":"42"},{"size":66,"mtime":1612798528309,"results":"73","hashOfConfig":"42"},{"size":3842,"mtime":1613398490467,"results":"74","hashOfConfig":"42"},{"size":83,"mtime":1612801075978,"results":"75","hashOfConfig":"42"},{"size":69,"mtime":1613073228121,"results":"76","hashOfConfig":"42"},{"size":1327,"mtime":1613491570854,"results":"77","hashOfConfig":"42"},{"size":54,"mtime":1613492413110,"results":"78","hashOfConfig":"42"},{"size":773,"mtime":1613492788203,"results":"79","hashOfConfig":"42"},{"size":69,"mtime":1613494577909,"results":"80","hashOfConfig":"42"},{"size":303,"mtime":1613561840628,"results":"81","hashOfConfig":"42"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},"oyl107",{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"84"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"84"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},"/Users/svitlo/Desktop/pokemon-game/src/index.js",[],["166","167"],"/Users/svitlo/Desktop/pokemon-game/src/App.js",[],"/Users/svitlo/Desktop/pokemon-game/src/components/Layout/Layout.jsx",[],"/Users/svitlo/Desktop/pokemon-game/src/components/Footer/Footer.jsx",[],"/Users/svitlo/Desktop/pokemon-game/src/components/Header/index.js",[],"/Users/svitlo/Desktop/pokemon-game/src/components/Layout/index.js",[],"/Users/svitlo/Desktop/pokemon-game/src/components/Footer/index.js",[],"/Users/svitlo/Desktop/pokemon-game/src/components/PokemonCard/PokemonCard.jsx",[],"/Users/svitlo/Desktop/pokemon-game/src/components/PokemonCard/index.js",[],"/Users/svitlo/Desktop/pokemon-game/src/components/Header/Header.jsx",[],"/Users/svitlo/Desktop/pokemon-game/src/routes/GamePage/index.js",[],"/Users/svitlo/Desktop/pokemon-game/src/routes/HomePage/index.js",[],"/Users/svitlo/Desktop/pokemon-game/src/routes/GamePage/GamePage.jsx",[],"/Users/svitlo/Desktop/pokemon-game/src/routes/HomePage/HomePage.jsx",[],"/Users/svitlo/Desktop/pokemon-game/src/components/MenuHeader/index.js",[],"/Users/svitlo/Desktop/pokemon-game/src/components/MenuHeader/MenuHeader.jsx",[],"/Users/svitlo/Desktop/pokemon-game/src/components/MenuHeader/Navbar/index.js",[],"/Users/svitlo/Desktop/pokemon-game/src/components/MenuHeader/Menu/index.js",[],"/Users/svitlo/Desktop/pokemon-game/src/components/MenuHeader/Menu/Menu.jsx",[],"/Users/svitlo/Desktop/pokemon-game/src/components/MenuHeader/Navbar/Navbar.jsx",[],"/Users/svitlo/Desktop/pokemon-game/src/routes/ContactPage/index.js",[],"/Users/svitlo/Desktop/pokemon-game/src/routes/AboutPage/index.js",[],"/Users/svitlo/Desktop/pokemon-game/src/routes/ContactPage/ContactPage.jsx",[],"/Users/svitlo/Desktop/pokemon-game/src/routes/AboutPage/AboutPage.jsx",[],"/Users/svitlo/Desktop/pokemon-game/src/routes/NotFound/index.js",[],"/Users/svitlo/Desktop/pokemon-game/src/routes/NotFound/NotFoundPage.jsx",[],"/Users/svitlo/Desktop/pokemon-game/src/service/firebase.js",[],"/Users/svitlo/Desktop/pokemon-game/src/routes/GamePage/routes/BoardPage/index.js",[],"/Users/svitlo/Desktop/pokemon-game/src/routes/GamePage/routes/StartPage/index.js",[],"/Users/svitlo/Desktop/pokemon-game/src/routes/GamePage/routes/BoardPage/BoardPage.jsx",["168","169"],"import {useContext, useEffect, useState} from 'react';\nimport {useHistory} from 'react-router-dom';\nimport {PokemonContext} from '../../../../context/pokemonContext';\nimport PokemonCard from '../../../../components/PokemonCard';\nimport PlayerBoard from './component/PlayerBoard';\nimport Result from './component/Result';\nimport ArrowChoice from './component/ArrowChoice';\nimport stl from './BoardPage.module.css';\n\n\nconst baseUrl = 'https://reactmarathon-api.netlify.app/api';\n\nconst counterWinCards = (boardWithCards, player1, player2) => {\n\tlet player1Count = player1.length;\n\tlet player2Count = player2.length;\n\n\tboardWithCards.forEach(square => {\n\t\tif((!!square.card) && square.card.possession === 'blue') {\n\t\t\tplayer1Count++;\n\t\t}\n\t\tif((!!square.card) && square.card.possession === 'red') {\n\t\t\tplayer2Count++;\n\t\t}\n\t})\n\treturn [player1Count, player2Count]\n}\n\n\nconst BoardPage = () => {\n\tconst history = useHistory();\n\tconst pokContext = useContext(PokemonContext);\n\t\n\tconst [randomPlayerNumber, setRandomPlayerNumber] = useState(null);\n\t// console.log('first step for player №', randomPlayerNumber);\n\n\tconst [board, setBoard] = useState([]);\n\tconst [player1, setPlayer1] = useState(() => {\n\t\treturn pokContext.selectedPoks.map(pok => ({\n\t\t\t...pok,\n\t\t\tpossession: 'blue',\n\t\t\tisSelectedCard: false //for fixed styles\n\t\t}))\n\t});\n\tconst [player2, setPlayer2] = useState([]);\n\tconst [chosenCard, setChosenCard] = useState(null);\n\tconst [playerSteps, setPlayerSteps] = useState(0);\n\tconst [winType, setWinType] = useState(null);\n\tconst [showArrow, setShowArrow] = useState(true);\n\n\n\tif(pokContext.selectedPoks.length === 0) {\n\t\thistory.replace('/game');\n\t}\n\n\tconst fetchAndSetBoard = async () => {\n\t\t//get board from backend and set to the STATE\n\t\tconst boardResponse = await fetch(`${baseUrl}/board`);\n\t\tconst boardRequest = await boardResponse.json();\n\n\t\tsetBoard(boardRequest.data);\n\t}\n\n\tconst fetchAndSetPlayer2 = async () => {\n\t\t//get opponent pokemons from backend and set to the Context and STATE\n\t\tconst player2Response = await fetch(`${baseUrl}/create-player`);\n\t\tconst player2Request = await player2Response.json();\n\n\t\tif(pokContext.opponentPoks.length < 6) {\n\t\t\tpokContext.addOpponentPokemon(player2Request.data);\n\t\t}\n\t\t\n\t\tsetPlayer2(() => {\n\t\t\treturn player2Request.data.map(pok => ({\n\t\t\t\t...pok,\n\t\t\t\tpossession: 'red',\n\t\t\t}))\n\t\t});\n\t}\n\n\tuseEffect(() => {\n\t\t//refresh opponent pokemons (remove them from Context)\n\t\t(pokContext.opponentPoks.length > 0) && pokContext.clearOpponentPoksFromContext();\n\n\t\t//set first random player step\n\t\tlet random = (Math.random()<.5)+1\n\t\tsetTimeout(() => setRandomPlayerNumber(random), 3000)\n\n\t\tfetchAndSetBoard();\n\t\tfetchAndSetPlayer2();\n\t}, [])\n\n\t\n\tuseEffect(() => {\n\t\tif(playerSteps === 9) {\n\t\t\tconst [player1Count, player2Count] = counterWinCards(board, player1, player2);\n\n\t\t\tif(player1Count > player2Count) {\n\t\t\t\tsetWinType('win');\n\t\t\t\tpokContext.setIsWinner(true);\n\t\t\t\tsetTimeout(() => history.push('/game/finish'), 2000)\n\t\t\t} \n\t\t\telse if(player1Count < player2Count) {\n\t\t\t\tsetWinType('lose');\n\t\t\t\t// history.push('/game/finish');\n\t\t\t\tsetTimeout(() => history.push('/game/finish'), 2000)\n\t\t\t} \n\t\t\telse {\n\t\t\t\tsetWinType('draw');\n\t\t\t\tsetTimeout(() => history.push('/game/finish'), 2000)\n\t\t\t}\n\t\t}\n\t}, [playerSteps])\n\n\n\tconst handleClickSquare = async (squarePosition) => {\n\t\t//match selected card with empty square using backend\n\t\tif(chosenCard) {\n\t\t\tconst params = {\n\t\t\t\tposition: squarePosition,\n\t\t\t\tcard: chosenCard,\n\t\t\t\tboard\n\t\t\t}\n\n\t\t\tconst res = await fetch(`${baseUrl}/players-turn`, {\n\t\t\t\tmethod: 'POST',\n\t\t\t\theaders: {\n\t\t\t\t\t'Content-Type': 'application/json',\n\t\t\t\t},\n\t\t\t\tbody: JSON.stringify(params)\n\t\t\t});\n\n\t\t\tconst matchCardToBoard = await res.json();\n\t\t\t\n\t\t\t//refresh STATE (remove card from player1 or player2) after match card with board\n\t\t\tif(chosenCard.playerNumber === 1) {\n\t\t\t\tsetPlayer1(prevState => prevState.filter(card => card.id !== chosenCard.id));\n\t\t\t}\n\t\t\tif(chosenCard.playerNumber === 2) {\n\t\t\t\tsetPlayer2(prevState => prevState.filter(card => card.id !== chosenCard.id));\n\t\t\t}\n\n\t\t\tsetBoard(matchCardToBoard.data);\n\n\t\t\t//count player steps to win/lose/draw\n\t\t\tsetPlayerSteps(prevState => {\n\t\t\t\tconst count = prevState + 1\n\t\t\t\treturn count\n\t\t\t})\n\n\t\t\tsetShowArrow(false);\n\t\t}\n\t}\n\t\n\n\treturn (\n\t\t<div className={stl.root}>\n\t\t\t{showArrow ? <ArrowChoice side={randomPlayerNumber}/> : null}\n\n\t\t\t<div className={stl.playerOne}>\n\t\t\t\t<PlayerBoard cards={player1}\n\t\t\t\t\t\t\t\t\t\t playerNumber={1}\n\t\t\t\t\t\t\t\t\t\t playerSteps={playerSteps}\n\t\t\t\t\t\t\t\t\t\t randomPlayerNumber={randomPlayerNumber}\n\t\t\t\t\t\t\t\t\t\t onChosenCard={(card) => setChosenCard(card)}/>\n\t\t\t</div>\n\n\t\t\t<div className={stl.board}>\n\t\t\t\t{ board.map(square => (\n\t\t\t\t\t<div key={square.position}\n\t\t\t\t\t\t\t className={stl.boardPlate}\n\t\t\t\t\t\t\t onClick={() => !square.card && handleClickSquare(square.position)}\n\t\t\t\t\t>\n\t\t\t\t\t\t{square.card && <PokemonCard {...square.card} minimize isActiveCard/>}\n\t\t\t\t\t</div>\n\t\t\t\t\t))\n\t\t\t\t}\n\t\t\t</div>\n\n\t\t\t<div className={stl.playerTwo}>\n\t\t\t\t<PlayerBoard cards={player2}\n\t\t\t\t\t\t\t\t\t\t playerNumber={2}\n\t\t\t\t\t\t\t\t\t\t playerSteps={playerSteps}\n\t\t\t\t\t\t\t\t\t\t randomPlayerNumber={randomPlayerNumber}\n\t\t\t\t\t\t\t\t\t\t onChosenCard={(card) => setChosenCard(card)}/>\n\t\t\t</div>\n\t\t\t\n\t\t\t{playerSteps === 9 ? <Result type={winType}/> : null}\n\t\t</div>\n\t);\n};\n\nexport default BoardPage;\n\n/*\nПосле выбора 5-ки покемонов и перехода на стр. Board Page при отрисовке страницы мы сразу видим слева наших 5 покемонов. Этих покемонов мы достали из Контекста, расширили на +1 св-во (possession: 'blue') и записали в STATE(массив) player1.\nЧуть позже отрисовуется игровая доска и 5-ка покемонов справа (оппоненты). Доска и покемоны подтягиваются с сервера и мы их записываем в STATE(массивы) в board и player2 соответственно, расширив перед этим каждого покемона на +1 св-во (possession: 'red'). Это доп. св-во нам нужно будет для закрашивания завоеванного покемона в цвет покемона-победителя.\n\nИтак, мы видим отрисованных покемонов слева взятых из Контекста и присвоенных в STATE (в массив player1), доску board и покемонов справа взятых с сервера и присвоенных в STATE (в массив player2). Мы добавляем левых и правых покоменов в состояние, чтоб была возможность потом их удалять из списка после перемещения их на игровое поле.\n\nЕсли обновить страницу, Контекст обнуляется и все покемоны, которые туда были записаны исчезают. Т.о. нам нужно заново добавить свою 5-ку покемонов в Контекст, а, соответственно, перейти назад на страницу Game Page где лежат все наши покемоны. Переход на Game Page осуществиться через обьект history хука useHistory() и метода replace: history.replace('/game') который вернет нас на шаг назад, т.е. с Board Page на Game Page.\n\nХод игры:\nНужно выбрать одного своего покемона (он сместиться влево) и кликнуть на одном из 9-ти пустых полей игровой доски. Покемон исчезнет из списка и появится на выбраном поле доски перекрасившись в свой цвет (синий или красный). Дальше второй игрок выбирает своего покемона и делает также размещает его на доске. Если покемоны оказались рядо, сравниваются value сторон соприкосновения и побеждает тот покемон, который имеет большее value. В конце игры побеждает тот игрок у которого больше захваченных (закрашенных в его цвет) покемонов. После определения результатов игры нас перебрасывает на страницу Finish Page, где можно забрать одного из покемонов опонета себе в коллекцию, если ты оказался победителем и закончить игру кнопкой Finish Game.\n\nИтак, имеем два списка карточек и игровое поле. По клику на одну из карточек (выбираем покемона перед помещением его на игровое поле) она смещается влево (выделяется из списка) благодаря св-ву состояния isSelectedBoardCard комопненты PlayerBoard. PlayerBoard - это доска со списком покемонов. Эта доска отрисовует левые и правые карточки. Также, по клику на карточку мы передаем в метод onChosenCard(...) обьект карточки, расширенный на +1 св-во playerNumber. Итого мы расширили сначала каждую карточку на доп.св-во possession: blue или red и теперь по клику добавляем еще одно св-во playerNumber: 1 или 2.\nПосле клика на карточку и добавления нужных доп.св-в мы должны кликнуть на одно из 9 пустых полей центральной игровой доски, чтоб переместить туда выбранную карту.\nДальше начинается \"магия\" в виде запросов на сервер...\nСтавим обработчик клика на поля (9шт.) игровой доски и через метод handleClickSquare(square.position) передавая ему позицию выбранного пустого поля формируем данные \"params\" (позиция + карточка + текущее состояние доски) которые отправим на сервер для того, чтоб связать выбранное пустое поле и выбранную карточку покемона. Если отконсолить ответ сервера, то получим массив обьектов у которых есть 2 поля position и card. Все карточки = null кроме той, которую связали с полем игровой доски:\n\nresponse:\n\t[\n\t\t{position: 1, card: null}\n\t\t{position: 2, card: null}\n\t\t...\n\t\t{position: 8, card: {name: 'pikachu', id: 22, playerNumber: 1, possession: blue, ...}}\n\t\t{position: 9, card: null}\n\t]\n\nТеперь нужно обновить состояние plаyer1 и player2 т.к. мы забыраем карту со списка и перемещаем ее на игровое поле if(chosenCard.playerNumber === 1 или 2) -> отфильтровуем выбранную, а также состояние игровой доски, т.к. на 8-й позиции уже запилен покемон:\nsetBoard(response).\nКогда отрисовуется карточка покемона на выбранном поле мы компоненту карты <PokemonCard/> передаем по-мимо самой карточки еще и доп. атрибуты minimize и isActiveCard для отображения в поле мини-версии карты лицевой стороной к нам.\n\nТеперь можно выбирать карточки у обеих игроков и ставить их в игровое поле. Но главное понимать какой покемон захватит другого и перекрасит побежденного в свой цвет. Сейчас же все покемоны на игровой доске имеют разные цвета (не синий или красный, а цвета своих карточек). Для этого используем доп.св-во possession (может быть blue или red) которое добавим в компонент <PokemonCard/>:\n\n\t<div className={classnames(stl.pokemon, stl[type], stl[possession])}>...</div>\n\nтеперь все добавленные на доску карточки будут окрашиваться в синий или красный цвет в зависимости от того, какой игрок сделал ход (левый игрок закрашивает синим, правый - красным) или какой покемон захвалит другого.\n\nПосле выкладывания всех покемонов на игровую доску нужно получить результат игры (выиграш, проиграш или ничья). Для этого заведем в STATE счетчик шагов playerSteps, который = 0 по умолчанию и будет увеличиваться на +1 каждый раз как был сделан один шаг:\n\n\tsetPlayerSteps(prevState => {\n\t\tconst count = prevState + 1\n\t\treturn count\n\t})\n\nэто увеличение счетчика проходит в том же обработчике клика на поле handleClickSquare.\nТеперь заведем еще один useEffect, который будет зависеть от шагов и считать кол-во закрашенных в один цвет карт, а также карты каторые остались не использованы в игре. Для этого создадим глобальную ф-ю counterWinCards(board, p1, p2), которая принимает доску (для подсчета карт красного и синего цвета) и карточки первого и второго игрока для подсчета не использованных карточек, если такие остались. Также внутри ф-ии проходим по массиву board и смотрим карточек какого цвета больше: синийх или красных и добавляем +1 к счетчику первого или второго игрока. Этот счетчик и будет возвращать эта глобальная ф-я:\n\n\treturn [player1Count, player2Count]\n\nВ созданном useEffect-е который зависит от кол-ва шагов будем забирать player1Count и player2Count и сравнивая их определять победителя.\n\nПосле любого результата игры, мы должны попасть на страницу Finish Game через history.push('/game/finish'), а в случае победы еще и записать в Контекст что есть победитель: pokContext.setIsWinner(true), чтоб использовать это состояние в Finish Page\n\n--------------------\n\nРандомный выбор первого хода (при загрузке определяем кто ходит первый) реализуем через (Math.random()<.5)+1 который будет отдавать рандомно 1 или 2. Эти цифры (или 1 или 2) получаем при первой отрисовке в useEffect-е и будем записывать их в состояние randomPlayerNumber. Цифры нужны для передачи их в комопнент <PlayerBoard randomPlayerNumber={randomPlayerNumber} .../> для использования в условиях возможности/невозможности первого хода того или иного игрока: \n\n\tif(playerNumber === randomPlayerNumber && (playerSteps%2 === 0)) {...} ходит 1-й игрок\n\tif(playerNumber === (randomPlayerNumber === 1 ? 2 : 1) && (playerSteps%2 !== 0)) {...} ходит 2-й\n\nВ этих двух условиях также реализован запрет повторного хода (т.е. нельзя выбрать после сделанного хода еще раз покемона и положить его на игровое поле)\n\nТакже подключаем два новых Компонента вывода результата игры <Result/> и спинера для выбора игрока который сделает первый ход <ArrowChoice/>\n*/","/Users/svitlo/Desktop/pokemon-game/src/routes/GamePage/routes/StartPage/StartPage.jsx",["170"],"import {useState, useEffect, useContext} from 'react';\nimport {useHistory} from 'react-router-dom';\nimport Layout from '../../../../components/Layout';\nimport PokemonCard from '../../../../components/PokemonCard';\nimport stl from './StartPage.module.css';\nimport layoutBg from '../../../../assets/bg3.jpg';\nimport database from '../../../../service/firebase';\nimport { PokemonContext } from '../../../../context/pokemonContext';\n\n\nconst StartPage = () => {\n\tconst history = useHistory();\n\tconst pokContext = useContext(PokemonContext);\n\tconst [pokemons, setPokemons] = useState({});\n\t// console.log('pokContext StartPage: ', pokContext);\n\n\tuseEffect(() => {\n\t\t//reset Context at first render\n\t\t(pokContext.selectedPoks.length > 0) && pokContext.clearSelectedPoksFromContext();\n\t\t(pokContext.opponentPoks.length > 0) && pokContext.clearOpponentPoksFromContext();\n\t\tpokContext.setIsWinner(false);\n\t\t\n\t\t//get poks from database and set to the STATE\n\t\tdatabase.ref('pokemons').once('value', (snapshot) => {\n\t\t\tsetPokemons(snapshot.val());\n\t\t});\t\t\n\t}, []);\n\n\t\n\tconst onCardClick = (id) => {\n\t\t//add new property 'isSelectedCard' to the selected pokemon(object)\n\t\tlet objKey = null;\n\n\t\tconst updatedPokemons = Object.entries(pokemons).reduce((acc, item) => {\n\t\t\tconst pokemon = {...item[1]};\n\t\t\t\n\t\t\tif (pokemon.id === id) {\n\t\t\t\tobjKey =\titem[0];\n\t\t\t\tpokemon.isSelectedCard = !pokemon.isSelectedCard;\n\t\t\t};\n\t\t\t\n\t\t\tacc[item[0]] = pokemon;\n\n\t\t\treturn acc;\n\t\t}, {});\n\n\t\t//refresh pokemons(object) with new selected pokemon\n\t\tsetPokemons(updatedPokemons);\n\n\t\tif (objKey) {\n\t\t\t//add to the Context(array) all selected pokemons\n\t\t\tconst updatedPokemon = updatedPokemons[objKey];\n\t\t\tpokContext.addSelectedPokemon(updatedPokemon)\n\t\t}\n\t}\n\n\tconst startGameBtn = () => {\n\t\thistory.push('/game/board');\n\t}\n\t\n\treturn (\n\t\t\t<Layout id='cards'\n\t\t\t\t\t\t\ttitle='Cards'\n\t\t\t\t\t\t\tcolorTitle='#252934'\n\t\t\t\t\t\t\turlBg={layoutBg}>\n\n\t\t\t\t<div className={stl.btn_wrap}>\n\t\t\t\t\t<button className={stl.start_btn}\n\t\t\t\t\t\t\t\t\tonClick={startGameBtn}\n\t\t\t\t\t\t\t\t\tdisabled={pokContext.selectedPoks.length < 5}>\n\t\t\t\t\t\tStart Game\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\n\t\t\t\t<div className={stl.flex}>\n\t\t\t\t\t{ Object.entries(pokemons).map(([key, value]) => \n\t\t\t\t\t\t<PokemonCard key={key}\n\t\t\t\t\t\t\t\t\t\t\t\t className={stl.cardSize}\n\t\t\t\t\t\t\t\t\t\t\t\t name={value.name} \n\t\t\t\t\t\t\t\t\t\t\t\t img={value.img}\n\t\t\t\t\t\t\t\t\t\t\t\t id={value.id}\n\t\t\t\t\t\t\t\t\t\t\t\t type={value.type}\n\t\t\t\t\t\t\t\t\t\t\t\t values={value.values}\n\t\t\t\t\t\t\t\t\t\t\t\t isActiveCard={true}\n\t\t\t\t\t\t\t\t\t\t\t\t isSelectedCard={value.isSelectedCard}\n\t\t\t\t\t\t\t\t\t\t\t\t onCardClick={() => {\n\t\t\t\t\t\t\t\t\t\t\t\t\tif(pokContext.selectedPoks.length < 5 || value.isSelectedCard) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonCardClick(value.id)\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t }} />)\n\t\t\t\t\t}\n\t\t\t\t</div>\n\t\t\t</Layout>\n\t)\n}\n\nexport default StartPage;\n\n/*\n1) Загрузка страницы -> очистка контекста PokContext для возможности выбрать новых покемонов + сбор с сервера покемонов и запись их в обьект pokemons в STATE (useEffect -> database -> setPokemons( snapshot.val()) ) для дальнейшей отрисовки на экране через компонент <PokemonCard/>. pokemons - это обьект с набором пар (\"ключ\"(странная строка): \"значение\"(обьект покемона))\n\n2) Выбор игровой пятерки. Нужно отметить 5 покемонов, которыми будем сражаться. Клик на покемона - добавление его в игровую пятерку, повторный клик - удалеине из пятерки. При клике мы выбираем покемона и добавляем ему новое св-во isSelectedCard и присваиваем ему true. Т.о. имеем \"старый-новый\" набор покемонов (updatedPokemons), одному из которых добавлена информация о том, что он был отмечен юзером.\nТакже, покемона, которого выбрал юзер, мы помещаем и в Контекст PokContext (массив выбранных покемонов selectedPoks) через метод addSelectedPokemon(updatedPokemon) для дальнейшего использования выбранных покемонов в других Компонентах.\n\nПеред игрой можно выбрать максимум 5 покемонов. За эти следит проверка pokContext.selectedPoks.length < 5 || value.isSelectedCard\n\n3) Нажатие на кнопку \"Start Game\" через обьект \"history\" хука useHistory() перекинет нас c 5-кой покемонов на игровое поле 'Board Page'. Кнопка \"Start Game\" активируется только после выбора 5 покемонов.\n*/","/Users/svitlo/Desktop/pokemon-game/src/routes/GamePage/routes/FinishPage/index.js",[],"/Users/svitlo/Desktop/pokemon-game/src/routes/GamePage/routes/FinishPage/FinishPage.jsx",[],"/Users/svitlo/Desktop/pokemon-game/src/context/pokemonContext.js",[],"/Users/svitlo/Desktop/pokemon-game/src/routes/GamePage/routes/BoardPage/component/PlayerBoard/index.js",[],"/Users/svitlo/Desktop/pokemon-game/src/routes/GamePage/routes/BoardPage/component/PlayerBoard/PlayerBoard.jsx",["171"],"import {useState, useEffect} from 'react';\nimport PokemonCard from '../../../../../../components/PokemonCard';\nimport stl from './PlayerBoard.module.css';\nimport classnames from 'classnames';\n\n\nconst PlayerBoard = ({cards, playerSteps, playerNumber, randomPlayerNumber, onChosenCard}) => {\n\tconst [isSelectedBoardCard, setIsSelectedBoardCard] = useState(null);\n\n\tconst handleClick = (card) => {\n\t\t//define next player step\n\t\tif(playerNumber === randomPlayerNumber && (playerSteps%2 === 0)) {\n\t\t\tsetIsSelectedBoardCard(card.id)\n\n\t\t\tonChosenCard && onChosenCard({\n\t\t\t\tplayerNumber,\n\t\t\t\t...card\n\t\t\t})\n\t\t}\n\t\tif(playerNumber === (randomPlayerNumber === 1 ? 2 : 1) && (playerSteps%2 !== 0)) {\n\t\t\tsetIsSelectedBoardCard(card.id)\n\n\t\t\tonChosenCard && onChosenCard({\n\t\t\t\tplayerNumber,\n\t\t\t\t...card\n\t\t\t})\n\t\t}\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t{cards.map(card => {\n\t\t\t\treturn (\n\t\t\t\t\t<div key={card.id}\n\t\t\t\t\t\t\t className={classnames(stl.board_card, {\n\t\t\t\t\t\t\t\t \t\t\t\t\t\t\t\t\t\t [stl.selected]: isSelectedBoardCard === card.id})}\n\t\t\t\t\t\t\t onClick={() => handleClick(card)}>\n\t\t\t\t\t\t<PokemonCard name={card.name} \n\t\t\t\t\t\t\t\t\t\t\t\t img={card.img}\n\t\t\t\t\t\t\t\t\t\t\t\t id={card.id}\n\t\t\t\t\t\t\t\t\t\t\t\t type={card.type}\n\t\t\t\t\t\t\t\t\t\t\t\t values={card.values}\n\t\t\t\t\t\t\t\t\t\t\t \t isActiveCard={true}\n\t\t\t\t\t\t\t\t\t\t\t\t minimize={true}/>\n\t\t\t\t\t</div>\t\t\t\t\n\t\t\t\t)\n\t\t\t})}\n\t\t</>\n\t)\n}\n\nexport default PlayerBoard;","/Users/svitlo/Desktop/pokemon-game/src/routes/GamePage/routes/BoardPage/component/Result/index.js",[],"/Users/svitlo/Desktop/pokemon-game/src/routes/GamePage/routes/BoardPage/component/Result/Result.jsx",[],"/Users/svitlo/Desktop/pokemon-game/src/routes/GamePage/routes/BoardPage/component/ArrowChoice/index.js",[],"/Users/svitlo/Desktop/pokemon-game/src/routes/GamePage/routes/BoardPage/component/ArrowChoice/ArrowChoice.jsx",[],{"ruleId":"172","replacedBy":"173"},{"ruleId":"174","replacedBy":"175"},{"ruleId":"176","severity":1,"message":"177","line":90,"column":5,"nodeType":"178","endLine":90,"endColumn":7,"suggestions":"179"},{"ruleId":"176","severity":1,"message":"180","line":112,"column":5,"nodeType":"178","endLine":112,"endColumn":18,"suggestions":"181"},{"ruleId":"176","severity":1,"message":"182","line":27,"column":5,"nodeType":"178","endLine":27,"endColumn":7,"suggestions":"183"},{"ruleId":"184","severity":1,"message":"185","line":1,"column":19,"nodeType":"186","messageId":"187","endLine":1,"endColumn":28},"no-native-reassign",["188"],"no-negated-in-lhs",["189"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'fetchAndSetPlayer2' and 'pokContext'. Either include them or remove the dependency array.","ArrayExpression",["190"],"React Hook useEffect has missing dependencies: 'board', 'history', 'player1', 'player2', and 'pokContext'. Either include them or remove the dependency array.",["191"],"React Hook useEffect has a missing dependency: 'pokContext'. Either include it or remove the dependency array.",["192"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation",{"desc":"193","fix":"194"},{"desc":"195","fix":"196"},{"desc":"197","fix":"198"},"Update the dependencies array to be: [fetchAndSetPlayer2, pokContext]",{"range":"199","text":"200"},"Update the dependencies array to be: [board, history, player1, player2, playerSteps, pokContext]",{"range":"201","text":"202"},"Update the dependencies array to be: [pokContext]",{"range":"203","text":"204"},[2684,2686],"[fetchAndSetPlayer2, pokContext]",[3246,3259],"[board, history, player1, player2, playerSteps, pokContext]",[1047,1049],"[pokContext]"]